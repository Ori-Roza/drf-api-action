[project]
name = "drf_api_action"
description = "use the power of restframework also as a library functions"
version = "1.0.3"
readme = "README.md"
dependencies = ["Django>=4.2.3", "djangorestframework>=3.14.0", "pytest-django>=4.5.2"]
authors = [
  { name="Ori Roza", email="ori75660@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.setuptools]
py-modules = []

[project.urls]
Homepage = "https://github.com/Ori-Roza/drf-api-action"

[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.8.0,<4"]

[tool.pylint.master]
fail-under = 10.0
ignore = [ "CVS",]
ignore-paths = [ "tests", ".*test.*", ".*migrations.*",
  ".*requirements.*", ".*venv.*", ".*pyproject.*", ".*egg-info.*", ".*README.*"]
jobs = 1
limit-inference-results = 100
persistent = "yes"
py-version = 3.9
suggestion-mode = "yes"
unsafe-load-any-extension = "no"
disable = "C0115, C0116, E1101, R0903, W1203, W0621, R0914, W0212, W1202, E0611, W0201, W0105, R0904, R0801,W0613, W0703, R1705, W0707, R0912, R0205, C0201, C0302, R1723, W0702"

[tool.pylint.messages_control]
disable = [ "unspecified-encoding", "missing-module-docstring", "unnecessary-pass", "E0401",]
enable = [ "c-extension-no-member",]

[tool.pylint.reports]
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
output-format = "text"
reports = "no"
score = "yes"

[tool.pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = [ "sys.exit", "argparse.parse_error",]

[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
bad-names = [ "foo", "bar", "baz", "toto", "tutu", "tata",]
class-attribute-naming-style = "any"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
docstring-min-length = -1
function-naming-style = "snake_case"
good-names = [ "i", "j", "k", "ex", "Run", "_",]
include-naming-hint = "no"
inlinevar-naming-style = "any"
method-naming-style = "snake_case"
module-naming-style = "snake_case"
no-docstring-rgx = "^_"
property-classes = "abc.abstractproperty"
variable-naming-style = "snake_case"

[tool.pylint.format]
ignore-long-lines = [ "^\\s*(# )?<?https?://\\S+>?$",]
indent-after-paren = 4
indent-string = "    "
max-line-length = 120
max-module-lines = 1000
single-line-class-stmt = "no"
single-line-if-stmt = "no"

[tool.pylint.logging]
logging-format-style = "old"
logging-modules = "logging"

[tool.pylint.miscellaneous]
notes = [ "FIXME", "XXX", "TODO",]

[tool.pylint.similarities]
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "no"
ignore-signatures = "no"
min-similarity-lines = 4

[tool.pylint.spelling]
max-spelling-suggestions = 4
spelling-ignore-comment-directives = [ "fmt: on", "fmt: off", "noqa:", "noqa", "nosec", "isort:skip", "mypy:",]
spelling-store-unknown-words = "no"

[tool.pylint.typecheck]
contextmanager-decorators = [ "contextlib.contextmanager",]
ignore-mixin-members = "yes"
ignore-none = "yes"
ignore-on-opaque-inference = "yes"
ignored-classes = [ "optparse.Values", "thread._local", "_thread._local",]
missing-member-hint = "yes"
missing-member-hint-distance = 1
missing-member-max-choices = 1
mixin-class-rgx = ".*[Mm]ixin"

[tool.pylint.variables]
allow-global-unused-variables = "yes"
callbacks = [ "cb_", "_cb",]
dummy-variables-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"
ignored-argument-names = "_.*|^ignored_|^unused_"
init-import = "no"
redefining-builtins-modules = [ "six.moves", "past.builtins", "future.builtins", "builtins", "io",]

[tool.pylint.string]
check-quote-consistency = "no"
check-str-concat-over-line-jumps = "no"

[tool.pylint.classes]
check-protected-access-in-special-methods = "no"
defining-attr-methods = [ "__init__", "__new__", "setUp", "__post_init__",]
exclude-protected = [ "_asdict", "_fields", "_replace", "_source", "_make",]
valid-classmethod-first-arg = "cls"
valid-metaclass-classmethod-first-arg = "cls"

[tool.pylint.design]
max-args = 8
max-attributes = 15
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50
min-public-methods = 2

[tool.pylint.imports]
allow-wildcard-with-all = "no"
analyse-fallback-blocks = "no"
known-third-party = "enchant"

[EXCEPTIONS]
overgeneral-exceptions = [ "BaseException", "Exception",]
